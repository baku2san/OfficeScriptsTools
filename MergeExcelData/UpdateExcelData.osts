{"version":"0.2.0","body":"function main(\n  workbook: ExcelScript.Workbook,\n  topLeftAddress: string = \"A1\",\n  keyName: string,\n  updateDataAsBody: object,\n) {\n  try {\n    let targetSheet = workbook.getActiveWorksheet();\n    let usedRange = targetSheet.getUsedRange();\n    let lastCell = usedRange.getLastCell();\n    let addressWithSheet = lastCell.getAddressLocal();;\n    let regExp = new RegExp(\"!(?<columnName>[a-zA-Z]+)(?<rowValue>\\\\d+)\");\n    let match = addressWithSheet.match(regExp);\n    let lastColumn = match.groups[\"columnName\"];            // ex.) 'H'\n    let lastRowValue = match.groups[\"rowValue\"];            // ex.) '17'\n    let lastRow = + lastRowValue;                           // ex.) 17\n    let lastCellName = lastColumn + lastRowValue;           // ex.) 'H17'\n\n    regExp = new RegExp(\"(?<columnName>[a-zA-Z]+)(?<rowValue>\\\\d+)\")\n    match = topLeftAddress.match(regExp);\n    let topLeftColumn = match.groups[\"columnName\"];\n    let headerRow = match.groups[\"rowValue\"];\n    let dataBeginRow = + headerRow + 1\n\n    // get TableLikeData to 2 demension array \n    let headers = targetSheet.getRange(topLeftColumn + headerRow + \":\" + lastColumn + headerRow).getValues()\n      .reduce((a, b) => { a.push(...b); return a }, [])\t\t// 二次元 to 一次元;\n    let dataRnageValues = targetSheet.getRange(topLeftColumn + dataBeginRow + \":\" + lastCellName).getValues();\n    let keyIndex = headers.findIndex(f => f == keyName);\n    let initialRowLength = dataRnageValues.length;  // 初期の行数\n\n    let updateHeaders: string[] = updateDataAsBody[\"result\"][\"headers\"];\n    let updateData: (string | number | boolean)[][] = updateDataAsBody[\"result\"][\"data\"];\n    let updateKeyIndex = updateHeaders.findIndex(f => f == keyName);\n\n    // Header の更新用 Index 調査: Copy 先に対する、Copy元のHeader の Indexes\n    let update2dataIndexes: number[] = [];\n    for (let index in updateHeaders) {\n      update2dataIndexes.push(headers.findIndex(f => f == updateHeaders[index]));\n    }\n\n    let data2updateIndexes: number[] = [];\n    for (let index in headers) {\n      data2updateIndexes.push(updateHeaders.findIndex(f => f == headers[index]));\n    }\n\n    // update\n    for (let index = 0; index < updateData.length; index++) {\n      let targetRow = dataRnageValues.find(f => f[keyIndex] == updateData[index][updateKeyIndex])\n      if (targetRow === undefined) {\n        // Key が見つからない場合\n        let newRow: (string | number | boolean)[] = [];\n\n        // 受け側の Headers を基準としている。更新側を基準として、無いものを追加する場合などは、ここを修正\n        for (let dataIndex in headers) {\n          let convertIndex = data2updateIndexes[dataIndex];\n          if (convertIndex == -1) {\n            // 列名が見つからない場合\n            newRow.push(\"\");\n          } else {\n            // 列名が見つかれば、その値を取得\n            newRow.push(updateData[index][convertIndex]);\n          }\n        }\n        // console.log(newRow);\n        dataRnageValues.push(newRow);\n      } else {\n        for (let dataIndex in headers) {\n          let convertIndex = data2updateIndexes[dataIndex];\n          if (convertIndex == -1) {\n            // 列名が見つからない場合\n            // 何も処理しない\n          } else {\n            // 列名が見つかれば、その値を取得\n            targetRow[dataIndex] = updateData[index][convertIndex];\n          }\n        }\n      }\n    }\n    // Copy 領域拡張。書式コピーの為の。\n    let insertRowNumber = dataRnageValues.length - initialRowLength;  // 増加行数\n    if (insertRowNumber > 0 ){\n      // 追加行数.copyFrom(最終行)\n      targetSheet.getRange(topLeftColumn + String(lastRow + 1) + \":\" + topLeftColumn + String(lastRow + insertRowNumber)).copyFrom(targetSheet.getRange(topLeftColumn + lastRowValue + \":\" + lastCellName), ExcelScript.RangeCopyType.all, false, false);\n    }\n\n    // Excel へ反映  \n    targetSheet.getRange(topLeftColumn + dataBeginRow + \":\" + lastColumn + String(dataRnageValues.length + dataBeginRow - 1)).setValues(dataRnageValues);\n    console.log(\"successfully updated.\");\n  } catch (error) {\n    if (error instanceof Error) {\n      console.log(error.message)\n    } else if (typeof error === 'string') {\n      console.log(error)\n    } else {\n      console.log(\"something went wrong.\")\n    }\n  }\n}\n","description":"","parameterInfo":"{\"originalParameterOrder\":[{\"name\":\"topLeftAddress\",\"index\":0},{\"name\":\"keyName\",\"index\":1},{\"name\":\"updateDataAsBody\",\"index\":2}],\"parameterSchema\":{\"type\":\"object\",\"required\":[\"topLeftAddress\",\"keyName\",\"updateDataAsBody\"],\"properties\":{\"topLeftAddress\":{\"type\":\"string\",\"default\":\"A1\"},\"keyName\":{\"type\":\"string\"},\"updateDataAsBody\":{\"type\":\"object\"}}},\"returnSchema\":{\"type\":\"object\",\"properties\":{}}}","apiInfo":"{\"variant\":\"synchronous\",\"variantVersion\":2}"}